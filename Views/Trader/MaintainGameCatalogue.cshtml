@model GameTradeTopia.Models.Game

@{
    ViewBag.Title = "MaintainGameCatalogue"; 
    IEnumerable<GameTradeTopia.Models.Game> games = ViewData["games"] as IEnumerable<GameTradeTopia.Models.Game>;

}

<div class="body-container">
    <section id="all-games">
        @foreach (var item in games)
        {
            var image = string.Format("data:image/gif;base64,{0}", Convert.ToBase64String(item.image));
            <section class="game-container">
                <div class="game-container-left">
                    <img src="@image" alt="@item.gameName.ToString()" class="game-image" />
                    <button class="btn">Delete   </button>
                </div>
                <div class="game-container-right">
                    <p>Name  :@item.gameName</p>
                    <p>Theme :@item.gameType</p>
                    <p>Year Published  :@item.yearPublished</p>
                    <p>GameID :@item.gameID</p>
                    <p>Rating:soon</p>

                </div>
            </section>
        }
    </section>
    <div>
        @using (Html.BeginForm("MaintainGameCatalogue", "Trader", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-container">
                <h2>Add New Game</h2>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div id="form-editor">
                <div class="form-group">
                    @Html.LabelFor(model => model.gameName ) 
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.gameName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.gameName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ageRating )
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ageRating, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ageRating, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.theme )
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.theme, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.theme, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.gameType )
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.gameType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.gameType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.yearPublished )
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.yearPublished, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.yearPublished, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.image )
                    <div id="input-img">
                        <input type="file" id="pic" name="pic"> 
                    </div>
                </div>
            </div>  
                        <input type="submit" value="Upload" class="btn form-control" />  
            </div>
        }
    </div>
</div>
@section styles{
    <link rel="stylesheet" href="~/Content/MaintainGameCatalogue.css" type="text/css" />
}